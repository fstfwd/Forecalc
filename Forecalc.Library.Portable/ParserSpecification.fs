// Implementation file for parser generated by fsyacc
module ParserSpecification
#nowarn "64";; // turn off warnings that type variables used in production annotations are instantiated to concrete type
open Microsoft.FSharp.Text.Lexing
open Microsoft.FSharp.Text.Parsing.ParseHelpers
# 1 "ParserSpecification.fsy"

open Forecalc.Library.Ast

# 10 "obj\x86\Debug\ParserSpecification.fs"
// This type is the type of tokens accepted by the parser
type token = 
  | EOF
  | LT
  | LTE
  | GT
  | GTE
  | EQ
  | NOTEQ
  | AMP
  | COLON
  | COMMA
  | BOOLEAN of (bool)
  | R1C1 of (string)
  | SHEETNAME of (string)
  | NAME of (string)
  | STRING of (string)
  | FLOAT of (float)
  | LPAR
  | RPAR
  | MUL
  | DIV
  | EXP
  | PLUS
  | MINUS
// This type is used to give symbolic names to token indexes, useful for error messages
type tokenId = 
    | TOKEN_EOF
    | TOKEN_LT
    | TOKEN_LTE
    | TOKEN_GT
    | TOKEN_GTE
    | TOKEN_EQ
    | TOKEN_NOTEQ
    | TOKEN_AMP
    | TOKEN_COLON
    | TOKEN_COMMA
    | TOKEN_BOOLEAN
    | TOKEN_R1C1
    | TOKEN_SHEETNAME
    | TOKEN_NAME
    | TOKEN_STRING
    | TOKEN_FLOAT
    | TOKEN_LPAR
    | TOKEN_RPAR
    | TOKEN_MUL
    | TOKEN_DIV
    | TOKEN_EXP
    | TOKEN_PLUS
    | TOKEN_MINUS
    | TOKEN_end_of_input
    | TOKEN_error
// This type is used to give symbolic names to token indexes, useful for error messages
type nonTerminalId = 
    | NONTERM__startstart
    | NONTERM_start
    | NONTERM_Prog
    | NONTERM_Expr
    | NONTERM_Constant
    | NONTERM_Formula
    | NONTERM_UnaryOperation
    | NONTERM_BinaryOperation
    | NONTERM_Ref
    | NONTERM_ExprList

// This function maps tokens to integers indexes
let tagOfToken (t:token) = 
  match t with
  | EOF  -> 0 
  | LT  -> 1 
  | LTE  -> 2 
  | GT  -> 3 
  | GTE  -> 4 
  | EQ  -> 5 
  | NOTEQ  -> 6 
  | AMP  -> 7 
  | COLON  -> 8 
  | COMMA  -> 9 
  | BOOLEAN _ -> 10 
  | R1C1 _ -> 11 
  | SHEETNAME _ -> 12 
  | NAME _ -> 13 
  | STRING _ -> 14 
  | FLOAT _ -> 15 
  | LPAR  -> 16 
  | RPAR  -> 17 
  | MUL  -> 18 
  | DIV  -> 19 
  | EXP  -> 20 
  | PLUS  -> 21 
  | MINUS  -> 22 

// This function maps integers indexes to symbolic token ids
let tokenTagToTokenId (tokenIdx:int) = 
  match tokenIdx with
  | 0 -> TOKEN_EOF 
  | 1 -> TOKEN_LT 
  | 2 -> TOKEN_LTE 
  | 3 -> TOKEN_GT 
  | 4 -> TOKEN_GTE 
  | 5 -> TOKEN_EQ 
  | 6 -> TOKEN_NOTEQ 
  | 7 -> TOKEN_AMP 
  | 8 -> TOKEN_COLON 
  | 9 -> TOKEN_COMMA 
  | 10 -> TOKEN_BOOLEAN 
  | 11 -> TOKEN_R1C1 
  | 12 -> TOKEN_SHEETNAME 
  | 13 -> TOKEN_NAME 
  | 14 -> TOKEN_STRING 
  | 15 -> TOKEN_FLOAT 
  | 16 -> TOKEN_LPAR 
  | 17 -> TOKEN_RPAR 
  | 18 -> TOKEN_MUL 
  | 19 -> TOKEN_DIV 
  | 20 -> TOKEN_EXP 
  | 21 -> TOKEN_PLUS 
  | 22 -> TOKEN_MINUS 
  | 25 -> TOKEN_end_of_input
  | 23 -> TOKEN_error
  | _ -> failwith "tokenTagToTokenId: bad token"

/// This function maps production indexes returned in syntax errors to strings representing the non terminal that would be produced by that production
let prodIdxToNonTerminal (prodIdx:int) = 
  match prodIdx with
    | 0 -> NONTERM__startstart 
    | 1 -> NONTERM_start 
    | 2 -> NONTERM_Prog 
    | 3 -> NONTERM_Expr 
    | 4 -> NONTERM_Expr 
    | 5 -> NONTERM_Expr 
    | 6 -> NONTERM_Expr 
    | 7 -> NONTERM_Expr 
    | 8 -> NONTERM_Expr 
    | 9 -> NONTERM_Constant 
    | 10 -> NONTERM_Constant 
    | 11 -> NONTERM_Constant 
    | 12 -> NONTERM_Formula 
    | 13 -> NONTERM_Formula 
    | 14 -> NONTERM_UnaryOperation 
    | 15 -> NONTERM_UnaryOperation 
    | 16 -> NONTERM_BinaryOperation 
    | 17 -> NONTERM_BinaryOperation 
    | 18 -> NONTERM_BinaryOperation 
    | 19 -> NONTERM_BinaryOperation 
    | 20 -> NONTERM_BinaryOperation 
    | 21 -> NONTERM_BinaryOperation 
    | 22 -> NONTERM_BinaryOperation 
    | 23 -> NONTERM_BinaryOperation 
    | 24 -> NONTERM_BinaryOperation 
    | 25 -> NONTERM_BinaryOperation 
    | 26 -> NONTERM_BinaryOperation 
    | 27 -> NONTERM_BinaryOperation 
    | 28 -> NONTERM_Ref 
    | 29 -> NONTERM_Ref 
    | 30 -> NONTERM_Ref 
    | 31 -> NONTERM_Ref 
    | 32 -> NONTERM_Ref 
    | 33 -> NONTERM_Ref 
    | 34 -> NONTERM_Ref 
    | 35 -> NONTERM_Ref 
    | 36 -> NONTERM_ExprList 
    | 37 -> NONTERM_ExprList 
    | _ -> failwith "prodIdxToNonTerminal: bad production index"

let _fsyacc_endOfInputTag = 25 
let _fsyacc_tagOfErrorTerminal = 23

// This function gets the name of a token as a string
let token_to_string (t:token) = 
  match t with 
  | EOF  -> "EOF" 
  | LT  -> "LT" 
  | LTE  -> "LTE" 
  | GT  -> "GT" 
  | GTE  -> "GTE" 
  | EQ  -> "EQ" 
  | NOTEQ  -> "NOTEQ" 
  | AMP  -> "AMP" 
  | COLON  -> "COLON" 
  | COMMA  -> "COMMA" 
  | BOOLEAN _ -> "BOOLEAN" 
  | R1C1 _ -> "R1C1" 
  | SHEETNAME _ -> "SHEETNAME" 
  | NAME _ -> "NAME" 
  | STRING _ -> "STRING" 
  | FLOAT _ -> "FLOAT" 
  | LPAR  -> "LPAR" 
  | RPAR  -> "RPAR" 
  | MUL  -> "MUL" 
  | DIV  -> "DIV" 
  | EXP  -> "EXP" 
  | PLUS  -> "PLUS" 
  | MINUS  -> "MINUS" 

// This function gets the data carried by a token as an object
let _fsyacc_dataOfToken (t:token) = 
  match t with 
  | EOF  -> (null : System.Object) 
  | LT  -> (null : System.Object) 
  | LTE  -> (null : System.Object) 
  | GT  -> (null : System.Object) 
  | GTE  -> (null : System.Object) 
  | EQ  -> (null : System.Object) 
  | NOTEQ  -> (null : System.Object) 
  | AMP  -> (null : System.Object) 
  | COLON  -> (null : System.Object) 
  | COMMA  -> (null : System.Object) 
  | BOOLEAN _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | R1C1 _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | SHEETNAME _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | NAME _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | STRING _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | FLOAT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | LPAR  -> (null : System.Object) 
  | RPAR  -> (null : System.Object) 
  | MUL  -> (null : System.Object) 
  | DIV  -> (null : System.Object) 
  | EXP  -> (null : System.Object) 
  | PLUS  -> (null : System.Object) 
  | MINUS  -> (null : System.Object) 
let _fsyacc_gotos = [| 0us; 65535us; 1us; 65535us; 0us; 1us; 1us; 65535us; 0us; 2us; 18us; 65535us; 0us; 3us; 6us; 37us; 10us; 11us; 21us; 22us; 23us; 24us; 38us; 25us; 39us; 26us; 40us; 27us; 41us; 28us; 42us; 29us; 43us; 30us; 44us; 31us; 45us; 32us; 46us; 33us; 47us; 34us; 48us; 35us; 49us; 36us; 62us; 37us; 18us; 65535us; 0us; 13us; 6us; 13us; 10us; 13us; 21us; 13us; 23us; 13us; 38us; 13us; 39us; 13us; 40us; 13us; 41us; 13us; 42us; 13us; 43us; 13us; 44us; 13us; 45us; 13us; 46us; 13us; 47us; 13us; 48us; 13us; 49us; 13us; 62us; 13us; 18us; 65535us; 0us; 14us; 6us; 14us; 10us; 14us; 21us; 14us; 23us; 14us; 38us; 14us; 39us; 14us; 40us; 14us; 41us; 14us; 42us; 14us; 43us; 14us; 44us; 14us; 45us; 14us; 46us; 14us; 47us; 14us; 48us; 14us; 49us; 14us; 62us; 14us; 18us; 65535us; 0us; 19us; 6us; 19us; 10us; 19us; 21us; 19us; 23us; 19us; 38us; 19us; 39us; 19us; 40us; 19us; 41us; 19us; 42us; 19us; 43us; 19us; 44us; 19us; 45us; 19us; 46us; 19us; 47us; 19us; 48us; 19us; 49us; 19us; 62us; 19us; 18us; 65535us; 0us; 20us; 6us; 20us; 10us; 20us; 21us; 20us; 23us; 20us; 38us; 20us; 39us; 20us; 40us; 20us; 41us; 20us; 42us; 20us; 43us; 20us; 44us; 20us; 45us; 20us; 46us; 20us; 47us; 20us; 48us; 20us; 49us; 20us; 62us; 20us; 18us; 65535us; 0us; 15us; 6us; 15us; 10us; 15us; 21us; 15us; 23us; 15us; 38us; 15us; 39us; 15us; 40us; 15us; 41us; 15us; 42us; 15us; 43us; 15us; 44us; 15us; 45us; 15us; 46us; 15us; 47us; 15us; 48us; 15us; 49us; 15us; 62us; 15us; 2us; 65535us; 6us; 7us; 62us; 63us; |]
let _fsyacc_sparseGotoTableRowOffsets = [|0us; 1us; 3us; 5us; 24us; 43us; 62us; 81us; 100us; 119us; |]
let _fsyacc_stateToProdIdxsTableElements = [| 1us; 0us; 1us; 0us; 1us; 1us; 13us; 2us; 16us; 17us; 18us; 19us; 20us; 21us; 22us; 23us; 24us; 25us; 26us; 27us; 1us; 2us; 4us; 3us; 4us; 30us; 31us; 2us; 3us; 4us; 1us; 3us; 1us; 3us; 1us; 4us; 1us; 5us; 13us; 5us; 16us; 17us; 18us; 19us; 20us; 21us; 22us; 23us; 24us; 25us; 26us; 27us; 1us; 5us; 1us; 6us; 1us; 7us; 1us; 8us; 1us; 9us; 1us; 10us; 1us; 11us; 1us; 12us; 1us; 13us; 1us; 14us; 13us; 14us; 16us; 17us; 18us; 19us; 20us; 21us; 22us; 23us; 24us; 25us; 26us; 27us; 1us; 15us; 13us; 15us; 16us; 17us; 18us; 19us; 20us; 21us; 22us; 23us; 24us; 25us; 26us; 27us; 13us; 16us; 16us; 17us; 18us; 19us; 20us; 21us; 22us; 23us; 24us; 25us; 26us; 27us; 13us; 16us; 17us; 17us; 18us; 19us; 20us; 21us; 22us; 23us; 24us; 25us; 26us; 27us; 13us; 16us; 17us; 18us; 18us; 19us; 20us; 21us; 22us; 23us; 24us; 25us; 26us; 27us; 13us; 16us; 17us; 18us; 19us; 19us; 20us; 21us; 22us; 23us; 24us; 25us; 26us; 27us; 13us; 16us; 17us; 18us; 19us; 20us; 20us; 21us; 22us; 23us; 24us; 25us; 26us; 27us; 13us; 16us; 17us; 18us; 19us; 20us; 21us; 21us; 22us; 23us; 24us; 25us; 26us; 27us; 13us; 16us; 17us; 18us; 19us; 20us; 21us; 22us; 22us; 23us; 24us; 25us; 26us; 27us; 13us; 16us; 17us; 18us; 19us; 20us; 21us; 22us; 23us; 23us; 24us; 25us; 26us; 27us; 13us; 16us; 17us; 18us; 19us; 20us; 21us; 22us; 23us; 24us; 24us; 25us; 26us; 27us; 13us; 16us; 17us; 18us; 19us; 20us; 21us; 22us; 23us; 24us; 25us; 25us; 26us; 27us; 13us; 16us; 17us; 18us; 19us; 20us; 21us; 22us; 23us; 24us; 25us; 26us; 26us; 27us; 13us; 16us; 17us; 18us; 19us; 20us; 21us; 22us; 23us; 24us; 25us; 26us; 27us; 27us; 14us; 16us; 17us; 18us; 19us; 20us; 21us; 22us; 23us; 24us; 25us; 26us; 27us; 36us; 37us; 1us; 16us; 1us; 17us; 1us; 18us; 1us; 19us; 1us; 20us; 1us; 21us; 1us; 22us; 1us; 23us; 1us; 24us; 1us; 25us; 1us; 26us; 1us; 27us; 4us; 28us; 29us; 32us; 33us; 2us; 28us; 29us; 1us; 29us; 1us; 29us; 1us; 31us; 1us; 31us; 2us; 32us; 33us; 1us; 33us; 1us; 33us; 2us; 34us; 35us; 1us; 35us; 1us; 35us; 1us; 37us; 1us; 37us; |]
let _fsyacc_stateToProdIdxsTableRowOffsets = [|0us; 2us; 4us; 6us; 20us; 22us; 27us; 30us; 32us; 34us; 36us; 38us; 52us; 54us; 56us; 58us; 60us; 62us; 64us; 66us; 68us; 70us; 72us; 86us; 88us; 102us; 116us; 130us; 144us; 158us; 172us; 186us; 200us; 214us; 228us; 242us; 256us; 270us; 285us; 287us; 289us; 291us; 293us; 295us; 297us; 299us; 301us; 303us; 305us; 307us; 309us; 314us; 317us; 319us; 321us; 323us; 325us; 328us; 330us; 332us; 335us; 337us; 339us; 341us; |]
let _fsyacc_action_rows = 64
let _fsyacc_actionTableElements = [|9us; 32768us; 10us; 18us; 11us; 59us; 12us; 50us; 13us; 5us; 14us; 17us; 15us; 16us; 16us; 10us; 21us; 21us; 22us; 23us; 0us; 49152us; 0us; 16385us; 13us; 32768us; 0us; 4us; 1us; 44us; 2us; 45us; 3us; 46us; 4us; 47us; 5us; 48us; 6us; 49us; 7us; 38us; 18us; 41us; 19us; 42us; 20us; 43us; 21us; 39us; 22us; 40us; 0us; 16386us; 2us; 16414us; 8us; 54us; 16us; 6us; 10us; 32768us; 10us; 18us; 11us; 59us; 12us; 50us; 13us; 5us; 14us; 17us; 15us; 16us; 16us; 10us; 17us; 9us; 21us; 21us; 22us; 23us; 1us; 32768us; 17us; 8us; 0us; 16387us; 0us; 16388us; 9us; 32768us; 10us; 18us; 11us; 59us; 12us; 50us; 13us; 5us; 14us; 17us; 15us; 16us; 16us; 10us; 21us; 21us; 22us; 23us; 13us; 32768us; 1us; 44us; 2us; 45us; 3us; 46us; 4us; 47us; 5us; 48us; 6us; 49us; 7us; 38us; 17us; 12us; 18us; 41us; 19us; 42us; 20us; 43us; 21us; 39us; 22us; 40us; 0us; 16389us; 0us; 16390us; 0us; 16391us; 0us; 16392us; 0us; 16393us; 0us; 16394us; 0us; 16395us; 0us; 16396us; 0us; 16397us; 9us; 32768us; 10us; 18us; 11us; 59us; 12us; 50us; 13us; 5us; 14us; 17us; 15us; 16us; 16us; 10us; 21us; 21us; 22us; 23us; 3us; 16398us; 18us; 41us; 19us; 42us; 20us; 43us; 9us; 32768us; 10us; 18us; 11us; 59us; 12us; 50us; 13us; 5us; 14us; 17us; 15us; 16us; 16us; 10us; 21us; 21us; 22us; 23us; 3us; 16399us; 18us; 41us; 19us; 42us; 20us; 43us; 11us; 16400us; 1us; 44us; 2us; 45us; 3us; 46us; 4us; 47us; 5us; 48us; 6us; 49us; 18us; 41us; 19us; 42us; 20us; 43us; 21us; 39us; 22us; 40us; 3us; 16401us; 18us; 41us; 19us; 42us; 20us; 43us; 3us; 16402us; 18us; 41us; 19us; 42us; 20us; 43us; 1us; 16403us; 20us; 43us; 1us; 16404us; 20us; 43us; 0us; 16405us; 5us; 16406us; 18us; 41us; 19us; 42us; 20us; 43us; 21us; 39us; 22us; 40us; 5us; 16407us; 18us; 41us; 19us; 42us; 20us; 43us; 21us; 39us; 22us; 40us; 5us; 16408us; 18us; 41us; 19us; 42us; 20us; 43us; 21us; 39us; 22us; 40us; 5us; 16409us; 18us; 41us; 19us; 42us; 20us; 43us; 21us; 39us; 22us; 40us; 5us; 16410us; 18us; 41us; 19us; 42us; 20us; 43us; 21us; 39us; 22us; 40us; 5us; 16411us; 18us; 41us; 19us; 42us; 20us; 43us; 21us; 39us; 22us; 40us; 13us; 16420us; 1us; 44us; 2us; 45us; 3us; 46us; 4us; 47us; 5us; 48us; 6us; 49us; 7us; 38us; 9us; 62us; 18us; 41us; 19us; 42us; 20us; 43us; 21us; 39us; 22us; 40us; 9us; 32768us; 10us; 18us; 11us; 59us; 12us; 50us; 13us; 5us; 14us; 17us; 15us; 16us; 16us; 10us; 21us; 21us; 22us; 23us; 9us; 32768us; 10us; 18us; 11us; 59us; 12us; 50us; 13us; 5us; 14us; 17us; 15us; 16us; 16us; 10us; 21us; 21us; 22us; 23us; 9us; 32768us; 10us; 18us; 11us; 59us; 12us; 50us; 13us; 5us; 14us; 17us; 15us; 16us; 16us; 10us; 21us; 21us; 22us; 23us; 9us; 32768us; 10us; 18us; 11us; 59us; 12us; 50us; 13us; 5us; 14us; 17us; 15us; 16us; 16us; 10us; 21us; 21us; 22us; 23us; 9us; 32768us; 10us; 18us; 11us; 59us; 12us; 50us; 13us; 5us; 14us; 17us; 15us; 16us; 16us; 10us; 21us; 21us; 22us; 23us; 9us; 32768us; 10us; 18us; 11us; 59us; 12us; 50us; 13us; 5us; 14us; 17us; 15us; 16us; 16us; 10us; 21us; 21us; 22us; 23us; 9us; 32768us; 10us; 18us; 11us; 59us; 12us; 50us; 13us; 5us; 14us; 17us; 15us; 16us; 16us; 10us; 21us; 21us; 22us; 23us; 9us; 32768us; 10us; 18us; 11us; 59us; 12us; 50us; 13us; 5us; 14us; 17us; 15us; 16us; 16us; 10us; 21us; 21us; 22us; 23us; 9us; 32768us; 10us; 18us; 11us; 59us; 12us; 50us; 13us; 5us; 14us; 17us; 15us; 16us; 16us; 10us; 21us; 21us; 22us; 23us; 9us; 32768us; 10us; 18us; 11us; 59us; 12us; 50us; 13us; 5us; 14us; 17us; 15us; 16us; 16us; 10us; 21us; 21us; 22us; 23us; 9us; 32768us; 10us; 18us; 11us; 59us; 12us; 50us; 13us; 5us; 14us; 17us; 15us; 16us; 16us; 10us; 21us; 21us; 22us; 23us; 9us; 32768us; 10us; 18us; 11us; 59us; 12us; 50us; 13us; 5us; 14us; 17us; 15us; 16us; 16us; 10us; 21us; 21us; 22us; 23us; 2us; 32768us; 11us; 56us; 13us; 51us; 1us; 16412us; 8us; 52us; 1us; 32768us; 13us; 53us; 0us; 16413us; 1us; 32768us; 13us; 55us; 0us; 16415us; 1us; 16416us; 8us; 57us; 1us; 32768us; 11us; 58us; 0us; 16417us; 1us; 16418us; 8us; 60us; 1us; 32768us; 11us; 61us; 0us; 16419us; 9us; 32768us; 10us; 18us; 11us; 59us; 12us; 50us; 13us; 5us; 14us; 17us; 15us; 16us; 16us; 10us; 21us; 21us; 22us; 23us; 0us; 16421us; |]
let _fsyacc_actionTableRowOffsets = [|0us; 10us; 11us; 12us; 26us; 27us; 30us; 41us; 43us; 44us; 45us; 55us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 76us; 77us; 78us; 88us; 92us; 102us; 106us; 118us; 122us; 126us; 128us; 130us; 131us; 137us; 143us; 149us; 155us; 161us; 167us; 181us; 191us; 201us; 211us; 221us; 231us; 241us; 251us; 261us; 271us; 281us; 291us; 301us; 304us; 306us; 308us; 309us; 311us; 312us; 314us; 316us; 317us; 319us; 321us; 322us; 332us; |]
let _fsyacc_reductionSymbolCounts = [|1us; 1us; 2us; 4us; 3us; 3us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 2us; 2us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 2us; 4us; 1us; 3us; 2us; 4us; 1us; 3us; 1us; 3us; |]
let _fsyacc_productionToNonTerminalTable = [|0us; 1us; 2us; 3us; 3us; 3us; 3us; 3us; 3us; 4us; 4us; 4us; 5us; 5us; 6us; 6us; 7us; 7us; 7us; 7us; 7us; 7us; 7us; 7us; 7us; 7us; 7us; 7us; 8us; 8us; 8us; 8us; 8us; 8us; 8us; 8us; 9us; 9us; |]
let _fsyacc_immediateActions = [|65535us; 49152us; 16385us; 65535us; 16386us; 65535us; 65535us; 65535us; 16387us; 16388us; 65535us; 65535us; 16389us; 16390us; 16391us; 16392us; 16393us; 16394us; 16395us; 16396us; 16397us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16413us; 65535us; 16415us; 65535us; 65535us; 16417us; 65535us; 65535us; 16419us; 65535us; 16421us; |]
let _fsyacc_reductions ()  =    [| 
# 243 "obj\x86\Debug\ParserSpecification.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
                      raise (Microsoft.FSharp.Text.Parsing.Accept(Microsoft.FSharp.Core.Operators.box _1))
                   )
                 : '_startstart));
# 252 "obj\x86\Debug\ParserSpecification.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Prog)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 40 "ParserSpecification.fsy"
                                   _1 
                   )
# 40 "ParserSpecification.fsy"
                 : Expr));
# 263 "obj\x86\Debug\ParserSpecification.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 43 "ParserSpecification.fsy"
                                                         _1 
                   )
# 43 "ParserSpecification.fsy"
                 : 'Prog));
# 274 "obj\x86\Debug\ParserSpecification.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'ExprList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 46 "ParserSpecification.fsy"
                                                         Fun(_1, _3) 
                   )
# 46 "ParserSpecification.fsy"
                 : 'Expr));
# 286 "obj\x86\Debug\ParserSpecification.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 47 "ParserSpecification.fsy"
                                                         Fun(_1, []) 
                   )
# 47 "ParserSpecification.fsy"
                 : 'Expr));
# 297 "obj\x86\Debug\ParserSpecification.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 48 "ParserSpecification.fsy"
                                                         _2 
                   )
# 48 "ParserSpecification.fsy"
                 : 'Expr));
# 308 "obj\x86\Debug\ParserSpecification.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Constant)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 49 "ParserSpecification.fsy"
                                                         _1 
                   )
# 49 "ParserSpecification.fsy"
                 : 'Expr));
# 319 "obj\x86\Debug\ParserSpecification.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Formula)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 50 "ParserSpecification.fsy"
                                                         _1 
                   )
# 50 "ParserSpecification.fsy"
                 : 'Expr));
# 330 "obj\x86\Debug\ParserSpecification.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Ref)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 51 "ParserSpecification.fsy"
                                                         _1 
                   )
# 51 "ParserSpecification.fsy"
                 : 'Expr));
# 341 "obj\x86\Debug\ParserSpecification.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : float)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 54 "ParserSpecification.fsy"
                                                         Float _1  
                   )
# 54 "ParserSpecification.fsy"
                 : 'Constant));
# 352 "obj\x86\Debug\ParserSpecification.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 55 "ParserSpecification.fsy"
                                                         String _1 
                   )
# 55 "ParserSpecification.fsy"
                 : 'Constant));
# 363 "obj\x86\Debug\ParserSpecification.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 56 "ParserSpecification.fsy"
                                                      Boolean _1 
                   )
# 56 "ParserSpecification.fsy"
                 : 'Constant));
# 374 "obj\x86\Debug\ParserSpecification.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'UnaryOperation)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 59 "ParserSpecification.fsy"
                                                         _1 
                   )
# 59 "ParserSpecification.fsy"
                 : 'Formula));
# 385 "obj\x86\Debug\ParserSpecification.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'BinaryOperation)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 60 "ParserSpecification.fsy"
                                                         _1 
                   )
# 60 "ParserSpecification.fsy"
                 : 'Formula));
# 396 "obj\x86\Debug\ParserSpecification.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 63 "ParserSpecification.fsy"
                                                         _2 
                   )
# 63 "ParserSpecification.fsy"
                 : 'UnaryOperation));
# 407 "obj\x86\Debug\ParserSpecification.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 64 "ParserSpecification.fsy"
                                                         Negate _2 
                   )
# 64 "ParserSpecification.fsy"
                 : 'UnaryOperation));
# 418 "obj\x86\Debug\ParserSpecification.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 67 "ParserSpecification.fsy"
                                                         Concat(_1, _3) 
                   )
# 67 "ParserSpecification.fsy"
                 : 'BinaryOperation));
# 430 "obj\x86\Debug\ParserSpecification.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 68 "ParserSpecification.fsy"
                                                         Add(_1, _3) 
                   )
# 68 "ParserSpecification.fsy"
                 : 'BinaryOperation));
# 442 "obj\x86\Debug\ParserSpecification.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 69 "ParserSpecification.fsy"
                                                         Sub(_1, _3) 
                   )
# 69 "ParserSpecification.fsy"
                 : 'BinaryOperation));
# 454 "obj\x86\Debug\ParserSpecification.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 70 "ParserSpecification.fsy"
                                                         Mul(_1, _3) 
                   )
# 70 "ParserSpecification.fsy"
                 : 'BinaryOperation));
# 466 "obj\x86\Debug\ParserSpecification.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 71 "ParserSpecification.fsy"
                                                         Div(_1, _3) 
                   )
# 71 "ParserSpecification.fsy"
                 : 'BinaryOperation));
# 478 "obj\x86\Debug\ParserSpecification.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 72 "ParserSpecification.fsy"
                                                         Pow(_1, _3) 
                   )
# 72 "ParserSpecification.fsy"
                 : 'BinaryOperation));
# 490 "obj\x86\Debug\ParserSpecification.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 73 "ParserSpecification.fsy"
                                                      Lt(_1, _3) 
                   )
# 73 "ParserSpecification.fsy"
                 : 'BinaryOperation));
# 502 "obj\x86\Debug\ParserSpecification.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 74 "ParserSpecification.fsy"
                                                      Lte(_1, _3) 
                   )
# 74 "ParserSpecification.fsy"
                 : 'BinaryOperation));
# 514 "obj\x86\Debug\ParserSpecification.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 75 "ParserSpecification.fsy"
                                                      Gt(_1, _3) 
                   )
# 75 "ParserSpecification.fsy"
                 : 'BinaryOperation));
# 526 "obj\x86\Debug\ParserSpecification.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 76 "ParserSpecification.fsy"
                                                      Gte(_1, _3) 
                   )
# 76 "ParserSpecification.fsy"
                 : 'BinaryOperation));
# 538 "obj\x86\Debug\ParserSpecification.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 77 "ParserSpecification.fsy"
                                                      Eq(_1, _3) 
                   )
# 77 "ParserSpecification.fsy"
                 : 'BinaryOperation));
# 550 "obj\x86\Debug\ParserSpecification.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 78 "ParserSpecification.fsy"
                                                      NotEq(_1, _3) 
                   )
# 78 "ParserSpecification.fsy"
                 : 'BinaryOperation));
# 562 "obj\x86\Debug\ParserSpecification.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 81 "ParserSpecification.fsy"
                                                         UnresolvedRef(A1SheetRef(_1, _2)) 
                   )
# 81 "ParserSpecification.fsy"
                 : 'Ref));
# 574 "obj\x86\Debug\ParserSpecification.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 82 "ParserSpecification.fsy"
                                                         UnresolvedRef(A1SheetRange(_1, _2, _4)) 
                   )
# 82 "ParserSpecification.fsy"
                 : 'Ref));
# 587 "obj\x86\Debug\ParserSpecification.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 83 "ParserSpecification.fsy"
                                                         UnresolvedRef(A1Cell _1) 
                   )
# 83 "ParserSpecification.fsy"
                 : 'Ref));
# 598 "obj\x86\Debug\ParserSpecification.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 84 "ParserSpecification.fsy"
                                                         UnresolvedRef(A1Range(_1, _3)) 
                   )
# 84 "ParserSpecification.fsy"
                 : 'Ref));
# 610 "obj\x86\Debug\ParserSpecification.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 85 "ParserSpecification.fsy"
                                                         UnresolvedRef(R1C1SheetRef(_1, _2)) 
                   )
# 85 "ParserSpecification.fsy"
                 : 'Ref));
# 622 "obj\x86\Debug\ParserSpecification.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 86 "ParserSpecification.fsy"
                                                         UnresolvedRef(R1C1SheetRange(_1, _2, _4)) 
                   )
# 86 "ParserSpecification.fsy"
                 : 'Ref));
# 635 "obj\x86\Debug\ParserSpecification.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 87 "ParserSpecification.fsy"
                                                         UnresolvedRef(R1C1Cell _1) 
                   )
# 87 "ParserSpecification.fsy"
                 : 'Ref));
# 646 "obj\x86\Debug\ParserSpecification.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 88 "ParserSpecification.fsy"
                                                         UnresolvedRef(R1C1Range(_1, _3)) 
                   )
# 88 "ParserSpecification.fsy"
                 : 'Ref));
# 658 "obj\x86\Debug\ParserSpecification.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 91 "ParserSpecification.fsy"
                                                         [_1] 
                   )
# 91 "ParserSpecification.fsy"
                 : 'ExprList));
# 669 "obj\x86\Debug\ParserSpecification.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'ExprList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 92 "ParserSpecification.fsy"
                                                         _1 :: _3 
                   )
# 92 "ParserSpecification.fsy"
                 : 'ExprList));
|]
# 682 "obj\x86\Debug\ParserSpecification.fs"
let tables () : Microsoft.FSharp.Text.Parsing.Tables<_> = 
  { reductions= _fsyacc_reductions ();
    endOfInputTag = _fsyacc_endOfInputTag;
    tagOfToken = tagOfToken;
    dataOfToken = _fsyacc_dataOfToken; 
    actionTableElements = _fsyacc_actionTableElements;
    actionTableRowOffsets = _fsyacc_actionTableRowOffsets;
    stateToProdIdxsTableElements = _fsyacc_stateToProdIdxsTableElements;
    stateToProdIdxsTableRowOffsets = _fsyacc_stateToProdIdxsTableRowOffsets;
    reductionSymbolCounts = _fsyacc_reductionSymbolCounts;
    immediateActions = _fsyacc_immediateActions;
    gotos = _fsyacc_gotos;
    sparseGotoTableRowOffsets = _fsyacc_sparseGotoTableRowOffsets;
    tagOfErrorTerminal = _fsyacc_tagOfErrorTerminal;
    parseError = (fun (ctxt:Microsoft.FSharp.Text.Parsing.ParseErrorContext<_>) -> 
                              match parse_error_rich with 
                              | Some f -> f ctxt
                              | None -> parse_error ctxt.Message);
    numTerminals = 26;
    productionToNonTerminalTable = _fsyacc_productionToNonTerminalTable  }
let engine lexer lexbuf startState = (tables ()).Interpret(lexer, lexbuf, startState)
let start lexer lexbuf : Expr =
    Microsoft.FSharp.Core.Operators.unbox ((tables ()).Interpret(lexer, lexbuf, 0))
